---
# Main wrapper playbook for virtual environment management
- name: Execute playbook via virtual environment
  hosts: "{{ target_host | default('localhost') }}"
  remote_user: "{{ ansible_user | default('ansible_default_user') }}"
  connection: "{{ 'ssh' if target_host is defined and target_host != 'localhost' else 'local' }}"
  gather_facts: yes
  vars:
    ansible_ssh_private_key_file: "{{ ssh_key_path | default(omit) }}"
    ansible_ssh_common_args: >-
      {{
        [
          '-o', 'StrictHostKeyChecking=no',
          '-o', 'UserKnownHostsFile=/dev/null',
          '-o', 'ControlMaster=no',
          '-o', 'ControlPersist=0',
          '-o', 'ServerAliveInterval=0',
          '-o', 'ServerAliveCountMax=1',
          '-o', 'ConnectTimeout=10'
        ] | join(' ') if target_host is defined and target_host != 'localhost' else omit
      }}
    # Determine actual venv path based on persistence
    actual_venv_path: "{{ persistent_venv_path if persist_venv else temp_venv_path }}"
    temp_venv_path: "/tmp/ansible-venv-{{ venv_name | default(ansible_date_time.epoch) }}"
    persistent_venv_path: "{{ ansible_env.HOME }}/ansible-venvs/{{ venv_name }}"
    
  tasks:
    - name: Check if persistent venv exists
      stat:
        path: "{{ actual_venv_path }}"
      delegate_to: "{{ target_host }}"
      register: venv_exists
      when: persist_venv

    - name: Display venv status
      debug:
        msg: "{{ 'Using existing' if (venv_exists.stat.exists | default(false)) else 'Creating new' }} venv at {{ actual_venv_path }}"
      delegate_to: "{{ target_host }}"

    - name: Setup virtual environment
      include_role:
        name: ../roles/venv_executor
      vars:
        venv_path: "{{ actual_venv_path }}"
        venv_action: "setup"

    - name: Execute playbook in venv
      include_tasks: execute_in_venv.yml
      when: playbook_to_run is defined

    - name: Collect metadata
      include_tasks: collect_metadata.yml
      when: collect_metadata | default(true)

    - name: Cleanup temporary venv
      file:
        path: "{{ actual_venv_path }}"
        state: absent
      delegate_to: "{{ target_host }}"
      when: 
        - not persist_venv
        - cleanup_venv | default(true)