---
# Tasks to collect virtual environment metadata
- name: Collect venv metadata
  delegate_to: "{{ target_host }}"
  block:
    - name: Get pip freeze output
      shell: |
        . {{ actual_venv_path }}/bin/activate && pip freeze
      register: pip_freeze_output
      changed_when: false

    - name: Get ansible version
      shell: |
        . {{ actual_venv_path }}/bin/activate && ansible --version
      register: ansible_version_output
      changed_when: false

    - name: List installed collections
      shell: |
        . {{ actual_venv_path }}/bin/activate && ansible-galaxy collection list --format json 2>/dev/null || echo '{}'
      register: collections_output
      changed_when: false

    - name: Get Python version
      shell: |
        {{ actual_venv_path }}/bin/python --version
      register: python_version_output
      changed_when: false

    - name: Get venv size
      shell: |
        du -sh {{ actual_venv_path }} | cut -f1
      register: venv_size_output
      changed_when: false

    - name: Create metadata structure
      set_fact:
        collected_metadata:
          python_version: "{{ python_version_output.stdout | trim }}"
          ansible_version: "{{ ansible_version_output.stdout_lines[0] | trim if ansible_version_output.stdout_lines else 'unknown' }}"
          venv_size: "{{ venv_size_output.stdout | trim }}"
          package_count: "{{ pip_freeze_output.stdout_lines | length }}"
          pip_packages: "{{ pip_freeze_output.stdout_lines }}"

    - name: Display collected metadata
      debug:
        msg:
          - "=== Virtual Environment Metadata ==="
          - "Python: {{ collected_metadata.python_version }}"
          - "Ansible: {{ collected_metadata.ansible_version }}"
          - "Size: {{ collected_metadata.venv_size }}"
          - "Packages: {{ collected_metadata.package_count }}"
          - "=== Collection Complete ==="

    - name: Store metadata for retrieval
      set_fact:
        venv_metadata_result: "{{ collected_metadata }}"