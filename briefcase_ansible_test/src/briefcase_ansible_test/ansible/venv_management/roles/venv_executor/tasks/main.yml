---
# Main tasks for venv_executor role

- name: Check if python3 is available
  command: python3 --version
  register: python3_check
  failed_when: python3_check.rc != 0
  changed_when: false

- name: Check if python3 venv module is available
  command: python3 -m venv --help
  register: venv_check
  failed_when: venv_check.rc != 0
  changed_when: false

- name: Check if pip is available
  command: python3 -m pip --version
  register: pip_check
  failed_when: pip_check.rc != 0
  changed_when: false

- name: Fail if required packages are missing
  fail:
    msg: |
      Required system packages are missing. Please install:
      - python3: {{ 'OK' if python3_check.rc == 0 else 'MISSING' }}
      - python3-venv: {{ 'OK' if venv_check.rc == 0 else 'MISSING' }}
      - python3-pip: {{ 'OK' if pip_check.rc == 0 else 'MISSING' }}
      Install these packages using your system package manager before running this role.
  when: python3_check.rc != 0 or venv_check.rc != 0 or pip_check.rc != 0

- name: Create venv directory if persistent
  file:
    path: "{{ venv_path | dirname }}"
    state: directory
    mode: '0755'
  when: persist_venv | default(false)

- name: Create virtual environment
  command: |
    {{ venv_command }} {% if system_site_packages %}--system-site-packages{% endif %} {{ venv_path }}
  args:
    creates: "{{ venv_path }}/bin/activate"
  register: venv_created

- name: Upgrade pip if requested
  shell: |
    . {{ venv_path }}/bin/activate && pip install --upgrade pip
  when: upgrade_pip | default(false)
  async: "{{ install_timeout | default(300) }}"
  poll: 10

- name: Install base Python packages
  shell: |
    . {{ venv_path }}/bin/activate && pip install {{ base_python_packages | default(['ansible-core']) | join(' ') }}
  async: "{{ install_timeout | default(300) }}"
  poll: 10

- name: Install additional Python packages
  shell: |
    . {{ venv_path }}/bin/activate && pip install {{ python_packages | join(' ') }}
  when: python_packages | default([]) | length > 0
  async: "{{ install_timeout | default(300) }}"
  poll: 10

- name: Create collections directory
  file:
    path: "{{ collection_install_path }}"
    state: directory
    mode: '0755'
  when: ansible_collections | length > 0

- name: Install Ansible collections
  shell: |
    . {{ venv_path }}/bin/activate && ansible-galaxy collection install {{ item }} -p {{ collection_install_path }}
  loop: "{{ ansible_collections }}"
  when: ansible_collections | length > 0
  environment:
    ANSIBLE_COLLECTIONS_PATH: "{{ collection_install_path }}"
  async: "{{ install_timeout }}"
  poll: 10

- name: Verify venv is functional
  shell: |
    . {{ venv_path }}/bin/activate && python --version && ansible --version
  register: venv_verify
  changed_when: false

- name: Display verification results
  debug:
    msg: "Virtual environment at {{ venv_path }} is functional"
    verbosity: 1